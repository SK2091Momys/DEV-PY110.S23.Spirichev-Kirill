type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 43
    length: 62
    placeholder_text: "[hex(num) for num in numbers]  # TODO заменить на итератор\
      \ map"
    initial_state:
      length: 62
      offset: 43
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: "map(hex, numbers)"
  - offset: 131
    length: 81
    placeholder_text: "...:  # TODO используя zip объединить число и его шестнадца\
      теричное представление"
    initial_state:
      length: 81
      offset: 131
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: "zip(numbers, hex_numbers):"
  text: |
    def task(numbers: list):
        hex_numbers = [hex(num) for num in numbers]  # TODO заменить на итератор map

        for num, hex_num in ...:  # TODO используя zip объединить число и его шестнадцатеричное представление
            print(f"Число {num:2} -> {hex_num}")


    if __name__ == "__main__":
        list_numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
        task(list_numbers)
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    Число  0 -> 0x0
    Число  1 -> 0x1
    Число  2 -> 0x2
    Число  3 -> 0x3
    Число  4 -> 0x4
    Число  5 -> 0x5
    Число  6 -> 0x6
    Число  7 -> 0x7
    Число  8 -> 0x8
    Число  9 -> 0x9
    Число 10 -> 0xa
    Число 11 -> 0xb
    Число 12 -> 0xc
    Число 13 -> 0xd
    Число 14 -> 0xe
    Число 15 -> 0xf
  learner_created: false
status: Unchecked
record: -1
