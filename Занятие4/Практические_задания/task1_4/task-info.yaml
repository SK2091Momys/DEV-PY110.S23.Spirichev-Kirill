type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 144
    length: 66
    placeholder_text: "...)  # TODO записать регулярное выражение с именованными г\
      руппами"
    initial_state:
      length: 66
      offset: 144
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: r"(?P<day>\d\d)-(?P<mounth>\d\d)-(?P<year>\d\d\d\d)")
  text: |
    import re


    def task():
        date_str = 'Amit 34-3456 12-05-2007, XYZ 56-4532 11-11-2011, ABC 67-8945 12-01-2009'

        date_pattern = re.compile(...)  # TODO записать регулярное выражение с именованными группами
        for date in date_pattern.finditer(date_str):  # итератор по совпадениям
            print(date.groupdict())  # вернуть словарь с именованными группами
            print('------')


    if __name__ == "__main__":
        task()
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    {'day': '12', 'mounth': '05', 'year': '2007'}
    ------
    {'day': '11', 'mounth': '11', 'year': '2011'}
    ------
    {'day': '12', 'mounth': '01', 'year': '2009'}
    ------
  learner_created: false
status: Unchecked
record: -1
